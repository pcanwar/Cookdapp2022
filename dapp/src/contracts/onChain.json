{
  "contractName": "onChain",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getEthPriceFeed",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getEthPriceFeed\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/onChain.sol\":\"onChain\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/contracts/chainlink/interface/AggregatorV3Interface.sol\":{\"keccak256\":\"0xa93d6ff9d71f6f5e7050ac5d7a7f97e7e2e276baedc71d7d422732f598658cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96fe7b5b655c1c839c3d6c6939f1459e664ec23fc9962b11a413654e7d07fe2d\",\"dweb:/ipfs/QmWrGn5TBWbpHDBENAJQn3788kcM3QPXsTJKujUgUjgKfq\"]},\"project:/contracts/onChain.sol\":{\"keccak256\":\"0xbfe4c6e8bf5f2c4b861f7a7fd921713a98acc6cf586b488778aa08e0263f1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a07127c854b59534695331a4464ff0dbf7575bcafb8b72aa7fe09ad5acc14\",\"dweb:/ipfs/Qmbzq34aSX2zD84YrtSfNpF7jKCHdMAhFZqYQ3WSDLaHAa\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5073d4a33860578de61dbabdc8bfdb98fd742fa7028e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610358806100746000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063afa7d1f014610030575b600080fd5b61003861004e565b60405161004591906101d0565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100b757600080fd5b505afa1580156100cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ef919061014a565b5050509150506305f5e1008161010591906101eb565b91505090565b60008151905061011a816102dd565b92915050565b60008151905061012f816102f4565b92915050565b6000815190506101448161030b565b92915050565b600080600080600060a0868803121561016257600080fd5b600061017088828901610135565b95505060206101818882890161010b565b945050604061019288828901610120565b93505060606101a388828901610120565b92505060806101b488828901610135565b9150509295509295909350565b6101ca81610255565b82525050565b60006020820190506101e560008301846101c1565b92915050565b60006101f682610255565b915061020183610255565b925082610211576102106102ae565b5b600160000383147f80000000000000000000000000000000000000000000000000000000000000008314161561024a5761024961027f565b5b828205905092915050565b6000819050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6102e681610255565b81146102f157600080fd5b50565b6102fd8161025f565b811461030857600080fd5b50565b61031481610269565b811461031f57600080fd5b5056fea264697066735822122049761b2b8eda3ac4a56db12b22f271e89f26dd011872480d84fad41b904297ee64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063afa7d1f014610030575b600080fd5b61003861004e565b60405161004591906101d0565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100b757600080fd5b505afa1580156100cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ef919061014a565b5050509150506305f5e1008161010591906101eb565b91505090565b60008151905061011a816102dd565b92915050565b60008151905061012f816102f4565b92915050565b6000815190506101448161030b565b92915050565b600080600080600060a0868803121561016257600080fd5b600061017088828901610135565b95505060206101818882890161010b565b945050604061019288828901610120565b93505060606101a388828901610120565b92505060806101b488828901610135565b9150509295509295909350565b6101ca81610255565b82525050565b60006020820190506101e560008301846101c1565b92915050565b60006101f682610255565b915061020183610255565b925082610211576102106102ae565b5b600160000383147f80000000000000000000000000000000000000000000000000000000000000008314161561024a5761024961027f565b5b828205905092915050565b6000819050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6102e681610255565b81146102f157600080fd5b50565b6102fd8161025f565b811461030857600080fd5b50565b61031481610269565b811461031f57600080fd5b5056fea264697066735822122049761b2b8eda3ac4a56db12b22f271e89f26dd011872480d84fad41b904297ee64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3121:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:79:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "79:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "94:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "88:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "88:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "79:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "136:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "110:25:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:32:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "110:32:9"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "47:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "55:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "63:5:9",
                "type": ""
              }
            ],
            "src": "7:141:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "217:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "227:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "242:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "236:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "236:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "227:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "285:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "258:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "258:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "258:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "195:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "203:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "211:5:9",
                "type": ""
              }
            ],
            "src": "154:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "365:79:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "375:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "390:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "384:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "375:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "432:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "406:25:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "406:32:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "406:32:9"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "343:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "351:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "359:5:9",
                "type": ""
              }
            ],
            "src": "303:141:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "592:762:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "639:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "648:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "651:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "641:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "641:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "641:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "613:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "622:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "609:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "609:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "634:3:9",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "605:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "605:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "602:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "665:127:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "680:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "694:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "684:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "709:73:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "754:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "765:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "750:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "750:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "774:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "719:30:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "719:63:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "709:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "802:128:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "817:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "831:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "821:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "847:73:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "892:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "903:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "888:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "888:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "912:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "857:30:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "857:63:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "847:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "940:129:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "955:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "969:2:9",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "959:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "985:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1031:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1042:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1027:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1027:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1051:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "995:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "995:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "985:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1079:129:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1094:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1108:2:9",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1098:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1124:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1170:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1181:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1166:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1166:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1190:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1134:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1134:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1124:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1218:129:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1233:17:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1247:3:9",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1237:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1264:73:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1309:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1320:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1305:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1305:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1329:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1274:30:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1274:63:9"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "1264:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "530:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "541:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "553:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "561:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "569:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "577:6:9",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "585:6:9",
                "type": ""
              }
            ],
            "src": "450:904:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1423:52:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1440:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1462:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "1445:16:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1445:23:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1433:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1433:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1433:36:9"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1411:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1418:3:9",
                "type": ""
              }
            ],
            "src": "1360:115:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1577:122:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1587:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1599:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1610:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1595:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1595:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1587:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1665:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1678:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1689:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1674:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1674:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1623:41:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1623:69:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1623:69:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1549:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1561:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1572:4:9",
                "type": ""
              }
            ],
            "src": "1481:218:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1746:344:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1756:24:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1778:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "1761:16:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1761:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "1756:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1789:24:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1811:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "1794:16:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1794:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "1789:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1835:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "1837:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1837:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1837:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1832:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1825:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1825:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1822:2:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2037:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2039:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2039:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2039:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "1926:1:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1929:66:9",
                            "type": "",
                            "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1923:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1923:73:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2013:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2020:1:9",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2023:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2016:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2016:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2010:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2010:16:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1906:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1906:130:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1903:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2069:15:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2079:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2082:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "sdiv",
                      "nodeType": "YulIdentifier",
                      "src": "2074:4:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2074:10:9"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "2069:1:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1735:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1738:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "1744:1:9",
                "type": ""
              }
            ],
            "src": "1705:385:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2140:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2150:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2161:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2150:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2122:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2132:7:9",
                "type": ""
              }
            ],
            "src": "2096:76:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2223:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2233:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2244:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2233:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2205:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2215:7:9",
                "type": ""
              }
            ],
            "src": "2178:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2305:61:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2315:45:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2330:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2337:22:9",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2326:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2326:34:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2315:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2287:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2297:7:9",
                "type": ""
              }
            ],
            "src": "2261:105:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2400:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2417:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2420:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2410:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2410:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2410:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2514:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2517:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2507:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2507:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2507:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2538:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2541:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2531:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2531:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2531:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2372:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2586:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2603:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2606:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2596:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2596:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2596:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2700:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2703:4:9",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2693:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2693:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2693:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2724:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2727:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2717:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2717:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2717:15:9"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "2558:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2786:78:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2842:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2851:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2854:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2844:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2844:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2844:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2809:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2833:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "2816:16:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2816:23:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2806:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2806:34:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2799:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2799:42:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2796:2:9"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2779:5:9",
                "type": ""
              }
            ],
            "src": "2744:120:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2913:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2970:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2979:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2982:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2972:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2972:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2972:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2936:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2961:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2943:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2943:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2933:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2933:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2926:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2926:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2923:2:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2906:5:9",
                "type": ""
              }
            ],
            "src": "2870:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3040:78:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3096:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3105:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3108:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3098:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3098:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3098:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3063:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3087:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "3070:16:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3070:23:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3060:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3060:34:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3053:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3053:42:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3050:2:9"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3033:5:9",
                "type": ""
              }
            ],
            "src": "2998:120:9"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "688:885:7:-:0;;;868:278;;;;;;;;;;935:42;895:15;;:83;;;;;;;;;;;;;;;;;;688:885;;;;;;",
  "deployedSourceMap": "688:885:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1407:163;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1458:3;1475:9;1491:15;;;;;;;;;;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1473:51;;;;;;1549:3;1541:5;:11;;;;:::i;:::-;1534:18;;;1407:163;:::o;7:141:9:-;;94:6;88:13;79:22;;110:32;136:5;110:32;:::i;:::-;69:79;;;;:::o;154:143::-;;242:6;236:13;227:22;;258:33;285:5;258:33;:::i;:::-;217:80;;;;:::o;303:141::-;;390:6;384:13;375:22;;406:32;432:5;406:32;:::i;:::-;365:79;;;;:::o;450:904::-;;;;;;634:3;622:9;613:7;609:23;605:33;602:2;;;651:1;648;641:12;602:2;694:1;719:63;774:7;765:6;754:9;750:22;719:63;:::i;:::-;709:73;;665:127;831:2;857:63;912:7;903:6;892:9;888:22;857:63;:::i;:::-;847:73;;802:128;969:2;995:64;1051:7;1042:6;1031:9;1027:22;995:64;:::i;:::-;985:74;;940:129;1108:2;1134:64;1190:7;1181:6;1170:9;1166:22;1134:64;:::i;:::-;1124:74;;1079:129;1247:3;1274:63;1329:7;1320:6;1309:9;1305:22;1274:63;:::i;:::-;1264:73;;1218:129;592:762;;;;;;;;:::o;1360:115::-;1445:23;1462:5;1445:23;:::i;:::-;1440:3;1433:36;1423:52;;:::o;1481:218::-;;1610:2;1599:9;1595:18;1587:26;;1623:69;1689:1;1678:9;1674:17;1665:6;1623:69;:::i;:::-;1577:122;;;;:::o;1705:385::-;;1761:19;1778:1;1761:19;:::i;:::-;1756:24;;1794:19;1811:1;1794:19;:::i;:::-;1789:24;;1832:1;1822:2;;1837:18;;:::i;:::-;1822:2;2023:1;2020;2016:9;2013:1;2010:16;1929:66;1926:1;1923:73;1906:130;1903:2;;;2039:18;;:::i;:::-;1903:2;2082:1;2079;2074:10;2069:15;;1746:344;;;;:::o;2096:76::-;;2161:5;2150:16;;2140:32;;;:::o;2178:77::-;;2244:5;2233:16;;2223:32;;;:::o;2261:105::-;;2337:22;2330:5;2326:34;2315:45;;2305:61;;;:::o;2372:180::-;2420:77;2417:1;2410:88;2517:4;2514:1;2507:15;2541:4;2538:1;2531:15;2558:180;2606:77;2603:1;2596:88;2703:4;2700:1;2693:15;2727:4;2724:1;2717:15;2744:120;2816:23;2833:5;2816:23;:::i;:::-;2809:5;2806:34;2796:2;;2854:1;2851;2844:12;2796:2;2786:78;:::o;2870:122::-;2943:24;2961:5;2943:24;:::i;:::-;2936:5;2933:35;2923:2;;2982:1;2979;2972:12;2923:2;2913:79;:::o;2998:120::-;3070:23;3087:5;3070:23;:::i;:::-;3063:5;3060:34;3050:2;;3108:1;3105;3098:12;3050:2;3040:78;:::o",
  "source": "// SPDX-License-Identifier: MIT \npragma solidity ^0.8.0;\nimport \"./chainlink/interface/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\n// https://docs.chain.link/docs/ethereum-addresses/\n// https://docs.chain.link/docs/data-feeds/price-feeds/addresses/?network=ethereum#Goerli%20Testnet\n// in this contract exmaple, there are one interface to get the price \n// chainlink : AggregatorV3Interface file and we only use latestRoundData function \n// IERC20Metadata interface contains IERC20 interface\n//  IERC20Metadata Interface functions from the ERC20 standard. (name(), decimals(), and symbol() functions are from ERC20 standard).\n\ncontract onChain  {\n    // the interface of chainlink is usdETHPriceFeed\n    AggregatorV3Interface private usdETHPriceFeed;\n    // to store an amount\n    uint private amount;\n\n    constructor () {  \n        usdETHPriceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e); // from chainlink feed price site.\n        // https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\n    }\n\n    // getEthPriceFeed from chainlink pair address using the function latestRoundData in the interface . \n    // in this function, it only returns the price of this pair 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e as\n    // it was added in the constructor\n    function getEthPriceFeed () external view returns (int) {\n        (,int price,,,) = usdETHPriceFeed.latestRoundData();\n        return price / 1e8; // 10 ** 8\n    }\n\n}",
  "sourcePath": "/Users/anwar/Documents/cookDapp2022/dapp/contracts/onChain.sol",
  "ast": {
    "absolutePath": "project:/contracts/onChain.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        324
      ],
      "IERC20": [
        77
      ],
      "IERC20Metadata": [
        102
      ],
      "onChain": [
        402
      ]
    },
    "id": 403,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 368,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "project:/contracts/chainlink/interface/AggregatorV3Interface.sol",
        "file": "./chainlink/interface/AggregatorV3Interface.sol",
        "id": 369,
        "nodeType": "ImportDirective",
        "scope": 403,
        "sourceUnit": 325,
        "src": "57:57:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 370,
        "nodeType": "ImportDirective",
        "scope": 403,
        "sourceUnit": 103,
        "src": "115:75:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 402,
        "linearizedBaseContracts": [
          402
        ],
        "name": "onChain",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 373,
            "mutability": "mutable",
            "name": "usdETHPriceFeed",
            "nodeType": "VariableDeclaration",
            "scope": 402,
            "src": "765:45:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$324",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 372,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 371,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 324,
                "src": "765:21:7"
              },
              "referencedDeclaration": 324,
              "src": "765:21:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$324",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 375,
            "mutability": "mutable",
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 402,
            "src": "842:19:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 374,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "842:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "883:263:7",
              "statements": [
                {
                  "expression": {
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 378,
                      "name": "usdETHPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "895:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$324",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307844346133333836303537384465363144424162446338424664623938464437343266413730323865",
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "935:42:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 379,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "913:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$324_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "913:65:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$324",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "895:83:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$324",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "895:83:7"
                }
              ]
            },
            "id": 385,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:2:7"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:0:7"
            },
            "scope": 402,
            "src": "868:278:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "1463:107:7",
              "statements": [
                {
                  "assignments": [
                    null,
                    391,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 391,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 400,
                      "src": "1475:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 390,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "1475:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 395,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 392,
                        "name": "usdETHPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "1491:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$324",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 323,
                      "src": "1491:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1491:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1473:51:7"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 396,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "1541:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "316538",
                      "id": 397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1549:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      },
                      "value": "1e8"
                    },
                    "src": "1541:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 389,
                  "id": 399,
                  "nodeType": "Return",
                  "src": "1534:18:7"
                }
              ]
            },
            "functionSelector": "afa7d1f0",
            "id": 401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthPriceFeed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1432:2:7"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "1458:3:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1457:5:7"
            },
            "scope": 402,
            "src": "1407:163:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 403,
        "src": "688:885:7"
      }
    ],
    "src": "33:1540:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0x317BE9E9650FAd09E1Eab8f4c466d9AcbA188c28",
      "transactionHash": "0x4711478dfd4e0413687b1a9381c46add95fd3be043eb7a188ba47b20f94c2e73"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-11-15T22:04:14.678Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}